{"version":3,"sources":["Design0/pages/Home.tsx","Design0/pages/Projects.tsx","Design0/pages/tetris/Tetris.tsx","Design0/MainBody.tsx","assets/logo.svg","Design0/SideBarData.tsx","Design0/SideBar.tsx","Design0/Design0.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Link","props","ScLink","styled","a","className","href","link","target","rel","text","Home","ScAccountListing","div","accounts","links","i","length","push","Projects","TetrominoType","Cell","ScCell","size","Board","ScBoard","boardWidth","boardHeight","cells","j","Tetris","ScTetrisBody","MainBody","ScMainBody","path","element","sideBarData","subdata","Router","color","indent","NavItem","x","React","isClicked","setIsClicked","undefined","children","to","onClick","sideBarDataTypeToChildren","result","kidds","SideBar","ScSideBar","src","logo","alt","style","width","TopBar","ScTopBar","nav","Footer","ScFooter","footer","Design0","ScDiv","ScMain","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.261f0978.chunk.js","sourcesContent":["import * as Router from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\ntype LinkProps = {\r\n  text: string;\r\n  link: string;\r\n}\r\nfunction Link(props: LinkProps) {\r\n  const ScLink = styled.a`\r\n    color: #61dafb;\r\n    text-decoration: none;\r\n  `;\r\n  return (\r\n    <ScLink\r\n      className=\"App-link\"\r\n      href={props.link}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      {props.text}\r\n    </ScLink>\r\n  );\r\n}\r\n\r\n\r\nexport default function Home() {\r\n\r\n\r\n  const ScAccountListing = styled.div`\r\n    display: grid;\r\n    /* flex-direction: column; */\r\n    //align-content: normal;\r\n    //justify-content: start;\r\n  `;\r\n\r\n  const accounts: [string, string][] = [\r\n    [\"Github\", \"https://github.com/ArturMarschenkulov\"],\r\n    [\"LinkedIn\", \"https://www.linkedin.com/in/artur-marschenkulov-a8a8b8b4/\"],\r\n    [\"Xing\", \"https://www.xing.com/profile/Artur_Marschenkulov/\"],\r\n    [\"Leetcode\", \"https://leetcode.com/ArturMarschenkulov/\"],\r\n    [\"Codewars\", \"https://www.codewars.com/users/ArturMarschenkulov\"],\r\n    [\"Hackerrank\", \"https://www.hackerrank.com/ArturMarschals\"]\r\n  ];\r\n\r\n\r\n  let links: JSX.Element[] = [];\r\n  for(let i = 0; i < accounts.length; i++) {\r\n    links.push(<Link text={accounts[i][0]} link={accounts[i][1]} />);\r\n  }\r\n  return (\r\n    <div>\r\n      <p>\r\n        This is the homepage of Artur Marschenkulov.\r\n      </p>\r\n      <ScAccountListing>\r\n        {links}\r\n      </ScAccountListing>\r\n    </div>\r\n  );\r\n}","import styled from \"styled-components\";\n\n\n\nexport default function Projects() {\n    return(\n        <div> \n            Here are the projects.\n        </div>\n    );\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\n//RGBAColor class which goes from 0 to 255\r\nclass RGBAColor {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n  a: number;\r\n  constructor(r: number, g: number, b: number, a: number = 255.0) {\r\n    this.r = r;\r\n    this.g = g;\r\n    this.b = b;\r\n    this.a = a;\r\n  }\r\n  toHEX6(): string {\r\n    return `#${this.r.toString(16)}${this.g.toString(16)}${this.b.toString(16)}`;\r\n  }\r\n  toHEX8(): string {\r\n    return `#${this.r.toString(16)}${this.g.toString(16)}${this.b.toString(16)}${this.a.toString(16)}`;\r\n  }\r\n  toRGB(): string {\r\n    return `rgb(${this.r},${this.g},${this.b})`;\r\n  }\r\n  toRGBA(): string {\r\n    return `rgba(${this.r},${this.g},${this.b},${this.a})`;\r\n  }\r\n\r\n  copy(): RGBAColor { \r\n    return new RGBAColor(this.r, this.g, this.b, this.a);\r\n  }\r\n}\r\n\r\n\r\n\r\n// function toRGB(color: string): string {\r\n\r\n//   const r = parseInt(color.substring(1, 3), 16);\r\n//   const g = parseInt(color.substring(3, 5), 16);\r\n//   const b = parseInt(color.substring(5, 7), 16);\r\n\r\n//   return `${r}, ${g}, ${b}`;\r\n// }\r\n\r\n\r\n\r\nenum TetrominoType {\r\n  I,\r\n  J,\r\n  L,\r\n  O,\r\n  S,\r\n  T,\r\n  Z,\r\n  Empty\r\n}\r\n\r\n\r\n// function toColor(type: TetrominoType): RGBAColor {\r\n//   switch (type) {\r\n//     case TetrominoType.I:\r\n//       return new RGBAColor(0, 0, 255); // blue\r\n//     case TetrominoType.J:\r\n//       return new RGBAColor(255, 0, 0); // red\r\n//     case TetrominoType.L:\r\n//       return new RGBAColor(0, 255, 0); // green\r\n//     case TetrominoType.O:\r\n//       return new RGBAColor(255, 255, 0); // yellow\r\n//     case TetrominoType.S:\r\n//       return new RGBAColor(255, 0, 255); // purple\r\n//     case TetrominoType.T:\r\n//       return new RGBAColor(0, 255, 255); // cyan\r\n//     case TetrominoType.Z:\r\n//       return new RGBAColor(255, 255, 255); // white\r\n//     default: return new RGBAColor(50, 50, 50); // grey\r\n//   }\r\n// }\r\n\r\ntype CellProps = {\r\n  size: number;\r\n}\r\n\r\nfunction Cell(props: CellProps): JSX.Element {\r\n  const ScCell = styled.div`\r\n    width: ${props.size}px;\r\n    height: ${props.size}px;\r\n    width: auto;\r\n    background: #ffffff21;\r\n  `;\r\n  return (\r\n    <ScCell />\r\n  );\r\n}\r\n\r\nfunction Board(): JSX.Element {\r\n\r\n  const tetrominoSize = 30; // in pixels\r\n\r\n  const boardWidth = 10;\r\n  const boardHeight = 16;\r\n  const gapSize = 1;\r\n\r\n\r\n  const ScBoard = styled.div`\r\n    display: grid;\r\n    grid-gap: ${gapSize}px;\r\n    grid-template-columns: repeat(${boardWidth}, ${tetrominoSize}px);\r\n    grid-template-rows: repeat(${boardHeight}, ${tetrominoSize}px);\r\n    width: ${(boardWidth * tetrominoSize) + gapSize * (boardWidth - 1)}px;\r\n    height: ${(boardHeight * tetrominoSize) + gapSize * (boardHeight - 1)}px;\r\n    background: #000000;\r\n    z-index: 5;\r\n    border:  4px solid #777;\r\n  `;\r\n\r\n  const cells: JSX.Element[][] = [];\r\n  for(let i = 0; i < boardHeight; i++) {\r\n    cells[i] = [];\r\n    for(let j = 0; j < boardWidth; j++) {\r\n      cells[i][j] = <Cell size={tetrominoSize} />;\r\n    }\r\n  }\r\n  return (\r\n    <ScBoard>\r\n      {cells}\r\n    </ScBoard>\r\n  );\r\n}\r\n\r\n\r\nexport default function Tetris() {\r\n  const ScTetrisBody = styled.div`\r\n    padding: 10px;\r\n    color: #2c2828;\r\n    //background-color: #2f2f2f;\r\n    font-size: calc(10px + 2vmin);\r\n  `;\r\n  return (\r\n    <ScTetrisBody>\r\n      <header>\r\n        Tetris\r\n      </header>\r\n      <Board/>\r\n    </ScTetrisBody>   \r\n  );\r\n}","import * as Router from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Projects from \"./pages/Projects\";\r\nimport Tetris from \"./pages/tetris/Tetris\";\r\n\r\n\r\ntype MainBodyProps = {\r\n  //pageStart: number;\r\n}\r\n\r\nexport default function MainBody(props: MainBodyProps) {\r\n\r\n  const ScApp = styled.div`\r\n    text-align: center;\r\n  `;\r\n  const ScMainBody2 = styled.div`\r\n    /* Position of the Body */\r\n    text-align: center;\r\n    margin: 0px;\r\n    border: 0px solid black;\r\n    padding: 0px;\r\n    position: absolute;\r\n    height: 100%;    \r\n    /* Content */\r\n    display: flex;\r\n    flex-grow: 1;\r\n    text-rendering: optimizeLegibility;\r\n    /* justify-content: center; */\r\n    /* justify-items: center;  */\r\n    color: white;\r\n    background-color: #2f2f2f;\r\n    font-size: calc(10px + 2vmin);\r\n  `;\r\n  const ScMainBody = styled.div`\r\n    //background-color: #f10000;\r\n    background-color: #E3E0DD;\r\n    width: 100%;\r\n  `;\r\n  return (\r\n    // <ScApp>\r\n    <ScMainBody>\r\n      <Router.Routes>\r\n        <Router.Route path='/' element={<Home />} />\r\n        <Router.Route path='/home' element={<Home />} />\r\n        <Router.Route path='/projects' element={<Projects />} />\r\n        <Router.Route path='/projects/games/tetris' element={<Tetris />} />\r\n        <Router.Route path='/about' element={<Home />} />\r\n      </Router.Routes>\r\n    </ScMainBody>\r\n    // </ScApp>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export type SideBarDataType = {\n    text: string,\n    path: string,\n    subdata?: SideBarDataType[],\n  };\n  \n  export const sideBarData: SideBarDataType[] = [\n    {\n      text: \"Home\",\n      path: \"/\",\n    },\n    {\n      text: \"Projects\",\n      path: \"/projects\",\n      subdata: [\n        {\n          text: \"Games\",\n          path: \"/projects/games\",\n          subdata: [\n            {\n              text: \"Sudoku\",\n              path: \"/projects/games/sudoku\",\n            },\n            {\n              text: \"Tetris\",\n              path: \"/projects/games/tetris\",\n            },\n            {\n              text: \"TicTacToe\",\n              path: \"/projects/games/tictactoe\",\n            },\n            {\n              text: \"Board Games\",\n              path: \"/projects/games/board-games\",\n            },\n          ],\n        },\n        {\n          text: \"Linguistics\",\n          path: \"/projects/linguistics\",\n          subdata: [\n            {\n              text: \"Sound Change Applier\",\n              path: \"/projects/linguistics/sound-change-applier\",\n            }\n          ],\n        },\n        {\n          text: \"Visualizers\",\n          path: \"/projects/visualizers\",\n          subdata: [\n            {\n              text: \"Path Finders\",\n              path: \"/projects/visualizers/path-finders\"\n            },\n            {\n              text: \"Sorting\",\n              path: \"/projects/visualizers/path-finders\"\n            },\n            {\n              text: \"CPU Simulation\",\n              path: \"/projects/visualizers/path-finders\"\n            },\n          ]\n        },\n      ],\n    },\n    {\n      text: \"Work\",\n      path: \"/work\",\n    },\n    {\n      text: \"Blog\",\n      path: \"/blog\",\n    },\n    {\n      text: \"Contact\",\n      path: \"/contact\",\n    },\n    {\n      text: \"About\",\n      path: \"/about\",\n    },\n  ];","import * as React from \"react\";\r\nimport * as Router from \"react-router-dom\";\r\n//import * as Styled from \"styled-components\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"assets/logo.svg\";\r\nimport { sideBarData, SideBarDataType } from \"./SideBarData\"\r\n\r\ntype ScLinkProps = {\r\n  color: string,\r\n  indent: number,\r\n};\r\n\r\nconst ScLink = styled(Router.Link) <ScLinkProps>`\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: 1rem;\r\n  line-height: 2rem;\r\n  color: white;\r\n  display: block;\r\n  border-bottom: 1px solid #282828;\r\n  background-color: ${props => props.color};\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  transition: filter 300ms;\r\n  transition: color 300ms;\r\n  text-align: left;\r\n  padding-left: ${props => props.indent / 2 + 0.5}rem;\r\n  //max-width: 100%;\r\n  filter: brightness(1);\r\n  &:hover {\r\n    color: gold;\r\n    filter: brightness(1.5);\r\n  }\r\n`;\r\n\r\ntype NavItemProps = {\r\n  //isOpen: boolean;\r\n  text: string;\r\n  to: string;\r\n  color: string;\r\n  indent: number;\r\n  children?: React.ReactNode[];\r\n}\r\n\r\nfunction getAmountOfChildren(x?: React.ReactNode[]): number {\r\n  return (x !== undefined && x !== null)\r\n    ? x?.length\r\n    : 0\r\n    ;\r\n}\r\n\r\nfunction NavItem(props: NavItemProps): JSX.Element {\r\n  const [isClicked, setIsClicked] = React.useState(false);\r\n  const color: string = (isClicked === true)\r\n    ? \"#272727\"\r\n    : props.color\r\n    ;\r\n  const amountOfChildren: number = getAmountOfChildren(props.children);\r\n\r\n  if (amountOfChildren > 0 && isClicked === true) {\r\n\r\n    return (\r\n      <div>\r\n        <ScLink\r\n          to={props.to}\r\n          color={color}\r\n          indent={props.indent}\r\n          onClick={() => setIsClicked(!isClicked)}\r\n        >\r\n          {props.text}\r\n        </ScLink>\r\n        {props.children}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <ScLink\r\n        to={props.to}\r\n        color={color}\r\n        indent={props.indent}\r\n        onClick={() => setIsClicked(!isClicked)}\r\n      >\r\n        {props.text}\r\n      </ScLink>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nfunction sideBarDataTypeToChildren(x: SideBarDataType[], props: SideBarProps, indent: number = 0): JSX.Element[] {\r\n  let result: Array<JSX.Element> = [];\r\n\r\n  for (let i = 0; i < x.length; i++) {\r\n    let kidds: JSX.Element[] | undefined = undefined;\r\n    if (x[i].subdata !== undefined) {\r\n      kidds = sideBarDataTypeToChildren(x[i].subdata!, props, indent + 1);\r\n    }\r\n\r\n    result.push(\r\n      <NavItem\r\n        indent={indent}\r\n        text={x[i].text}\r\n        to={x[i].path}\r\n        color={props.color}\r\n        children={kidds}\r\n      />\r\n    );\r\n\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\ntype SideBarProps = {\r\n  color: string\r\n};\r\n\r\nexport default function SideBar(props: SideBarProps) {\r\n\r\n  const ScSideBar2 = styled(\"div\") <SideBarProps>`\r\n    margin: 0;\r\n    padding: 0px;\r\n    position: fixed;\r\n    height: 100vh;\r\n    background-color: ${props => props.color};\r\n    align-items: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n  `;\r\n\r\n  const ScSideBar = styled(\"div\") <SideBarProps>`\r\n    display: block;\r\n    box-sizing: border-box;\r\n    background-color: ${props => props.color};\r\n    width: 300px;\r\n    clip-path: inset(0px);\r\n    //margin-top: 10px;\r\n    z-index: auto;\r\n    position: static;\r\n    line-height: 26.4px;\r\n    border-right: 1px solid #bb9696;\r\n  `;\r\n\r\n  return (\r\n    <ScSideBar color={props.color}>\r\n      <img\r\n        src={logo}\r\n        className=\"App-logo\"\r\n        alt=\"logo\"\r\n        style={{ width: 200 }}\r\n      />\r\n      <nav style={{ width: \"100%\" }}>\r\n        {sideBarDataTypeToChildren(sideBarData, props)}\r\n      </nav>\r\n    </ScSideBar>\r\n  );\r\n}","import * as React from \"react\";\r\nimport * as Router from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport MainBody from \"./MainBody\";\r\nimport SideBar from \"./SideBar\";\r\n\r\n\r\nfunction TopBar(): JSX.Element {\r\n  const ScTopBar = styled.nav`\r\n    display: flex;\r\n    width: 100%;\r\n    color: white;\r\n    background-color: #000000;\r\n    position: sticky;\r\n    \r\n    //padding: 0px;\r\n    //height: 10px;\r\n    //top: 0;\r\n\r\n    z-index: 2;\r\n    \r\n    flex-direction: row;\r\n  `;\r\n  return (\r\n    <ScTopBar>\r\n      Top Bar\r\n    </ScTopBar>\r\n  );\r\n}\r\n\r\nfunction Footer(): JSX.Element {\r\n  const ScFooter = styled.footer`\r\n    display: block;\r\n    box-sizing: border-box;\r\n    background-color: #2b7495;\r\n    padding: 10 10;\r\n    height: 100%;\r\n  `;\r\n\r\n  return (\r\n    <ScFooter>\r\n      Footer\r\n    </ScFooter>\r\n  );\r\n}\r\nexport default class Design0 extends React.Component {\r\n  render(): JSX.Element {\r\n    const ScMainBackground = styled.div`\r\n      background-color: #f35dec; // NOTE: Mainly for debugging. Maybe remove\r\n    `;\r\n    const ScDiv = styled.div`\r\n      display: flex;\r\n    `;\r\n\r\n    const ScMain = styled.div`\r\n      //display: flex;\r\n      //flex-direction: column;\r\n      //min-height: 100%;\r\n      //box-sizing: border-box;\r\n    `;\r\n    return (\r\n      <Router.BrowserRouter>\r\n        <ScMain>\r\n          <TopBar />\r\n          <ScDiv>\r\n            <SideBar color={\"#37282E\"} />\r\n            <MainBody />\r\n          </ScDiv>\r\n          <Footer />\r\n        </ScMain>\r\n      </Router.BrowserRouter>\r\n    );\r\n  }\r\n}","import Design0 from './Design0/Design0';\n\n/** Contventions\n * Styles Components always have the \"SC_\" prefix.\n *\n */\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Design0/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}